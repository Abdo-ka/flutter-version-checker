# Complete Flutter CI/CD Workflow with Version Checking
# Place this file in .github/workflows/ in your Flutter project

name: Flutter CI/CD with Version Auto-Increment

on:
  push:
    branches: [ main, develop, release/* ]
  pull_request:
    branches: [ main ]

jobs:
  version-check:
    name: 🔍 Version Check & Auto-Increment
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-check.outputs.current-version }}
      version-updated: ${{ steps.version-check.outputs.version-updated }}
      new-version: ${{ steps.version-check.outputs.new-version }}
    
    steps:
    - name: 📚 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🔍 Check and Auto-Increment Flutter Version
      id: version-check
      uses: Abdo-ka/flutter-version-checker@v1
      with:
        branch: ${{ github.ref_name }}
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "🚀 Auto-increment version to {{ new_version }} [skip ci]"

  build-and-test:
    name: 🏗️ Build & Test Flutter App
    runs-on: ubuntu-latest
    needs: version-check
    
    steps:
    - name: 📚 Checkout Repository (Updated)
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        ref: ${{ github.ref }}
    
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
    
    - name: 📦 Get Dependencies
      run: flutter pub get
    
    - name: 🔍 Analyze Code
      run: flutter analyze
    
    - name: 🧪 Run Tests
      run: flutter test --coverage
    
    - name: 🏗️ Build APK
      run: flutter build apk --release
      
    - name: 🏗️ Build App Bundle
      run: flutter build appbundle --release
    
    - name: 📦 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: flutter-builds-${{ needs.version-check.outputs.version }}
        path: |
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/bundle/release/app-release.aab

  deploy:
    name: 🚀 Deploy to Store
    runs-on: ubuntu-latest
    needs: [version-check, build-and-test]
    if: github.ref == 'refs/heads/main' && needs.version-check.outputs.version-updated == 'true'
    
    steps:
    - name: 📚 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 📦 Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: flutter-builds-${{ needs.version-check.outputs.version }}
        path: build/
    
    - name: 🎉 Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.version-check.outputs.version }}
        release_name: Release v${{ needs.version-check.outputs.version }}
        body: |
          🎉 **New Release v${{ needs.version-check.outputs.version }}**
          
          This release was automatically generated by the Flutter Version Checker Action.
          
          **Changes:**
          - Version auto-incremented from previous version
          - Contains latest features and bug fixes
          
          **Downloads:**
          - APK: Available in release assets
          - App Bundle: Available in release assets
        draft: false
        prerelease: false

  notify:
    name: 📱 Notify Team
    runs-on: ubuntu-latest
    needs: [version-check, build-and-test, deploy]
    if: always()
    
    steps:
    - name: 📱 Notify Success
      if: needs.build-and-test.result == 'success'
      run: |
        echo "✅ Flutter CI/CD completed successfully!"
        echo "📦 Version: ${{ needs.version-check.outputs.version }}"
        echo "🔄 Updated: ${{ needs.version-check.outputs.version-updated }}"
    
    - name: 📱 Notify Failure
      if: needs.build-and-test.result == 'failure'
      run: |
        echo "❌ Flutter CI/CD failed!"
        echo "📦 Version: ${{ needs.version-check.outputs.version }}"
